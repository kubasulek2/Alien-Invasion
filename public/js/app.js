$(()=>{const t=new Audio("../music/Quirky-Action2.mp3"),s=$("#game");let e;t.addEventListener("ended",function(){this.currentTime=0,this.play()},!1);const i={shot:new Audio("../music/shot.mp3"),disabled:!1,subject:$("#cursor"),mouseX:0,mouseY:0,xPos:0,yPos:0,clear:"",drawCursor:function(){this.xPos+=this.mouseX-this.xPos-25,this.yPos+=this.mouseY-this.yPos-25,this.subject.css({left:this.xPos,top:this.yPos})},animateCursor:function(t){let s,e=Date.now,o=window.requestAnimationFrame,n=e(),a=()=>{e()-n<t||(n+=t,i.drawCursor()),s||o(a)};return o(a),this.clear=function(){s=1}},handleClick:function(){this.disabled||(this.shot.play(),this.subject.addClass("reload")),this.disabled=!0,window.setTimeout(()=>{this.disabled=!1,this.subject.removeClass("reload")},1500)}};function o(){this.boxes=$(),this.level=1,this.enemiesData=[],this.startNewGame=function(){window.setInterval(()=>{})},this.drawEnemy=function(){Math.random()},this.levelUp=function(){},this.animateStart=function(){const t=$("#countDown");let s=3;t.addClass("countAnimation");let e=window.setInterval(()=>{s--,t.text(s),s<0&&(t.text("Start"),s<-1&&(t.text("3"),t.removeClass("countAnimation"),window.clearInterval(e)))},500)}}i.animateCursor(1),s.on("mousemove",function(t){i.mouseX=t.pageX-s.offset().left,i.mouseY=t.pageY-s.offset().top}),s.on("mouseenter",function(){i.subject.css("display","block")}),s.on("mouseleave",function(){i.subject.removeAttr("style")}),s.on("click",()=>{i.handleClick()}),$("#start").on("click",()=>{(e=new o).animateStart(),$(".alien").addClass("start")}),$(".alien").on("click",function(t){i.disabled||$(this).fadeOut(400,()=>{this.remove()})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyIkIiwic291bmR0cmFjayIsIkF1ZGlvIiwiZ2FtZSIsIm5ld0dhbWUiLCJhZGRFdmVudExpc3RlbmVyIiwidGhpcyIsImN1cnJlbnRUaW1lIiwicGxheSIsInNob3QiLCJkaXNhYmxlZCIsInN1YmplY3QiLCJtb3VzZVgiLCJtb3VzZVkiLCJ4UG9zIiwieVBvcyIsImNsZWFyIiwiZHJhd0N1cnNvciIsImNzcyIsImxlZnQiLCJ0b3AiLCJhbmltYXRlQ3Vyc29yIiwicmVxdWVzdEFuaW1hdGlvbiIsImRhdGVOb3ciLCJzdGFydCIsInN0b3AiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbEZ1bmMiLCJkZWxheSIsImN1cnNvciIsImhhbmRsZUNsaWNrIiwiYWRkQ2xhc3MiLCJzZXRUaW1lb3V0IiwicmVtb3ZlQ2xhc3MiLCJzdGFydE5ld0dhbWUiLCJzZXRJbnRlcnZhbCIsImxldmVsIiwiZHJhd0VuZW15IiwiZW5lbXlMb2NhdGlvbiIsImNvdW50ZXIiLCJNYXRoIiwicmFuZG9tIiwibGV2ZWxVcCIsImNvdW50RG93biIsInRleHQiLCJjbGVhckludGVydmFsIiwiR2FtZSIsImlkIiwiZSIsInBhZ2VZIiwib2Zmc2V0IiwicmVtb3ZlQXR0ciIsIm9uIiwiYW5pbWF0ZVN0YXJ0IiwiZmFkZU91dCIsInJlbW92ZSJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUcsS0FDQyxNQUFNQyxFQUFhLElBQUlDLE1BQU0sK0JBQ3ZCQyxFQUFPSCxFQUFFLFNBQ2YsSUFBSUksRUFFSkgsRUFBV0ksaUJBQWlCLFFBQVMsV0FDakNDLEtBQUtDLFlBQWMsRUFDbkJELEtBQUtFLFNBQ04sR0FJQ0MsTUFBQUEsRUFBVVAsQ0FDVlEsS0FBQUEsSUFBVVIsTUFGQyxxQkFHWFMsVUFBU1gsRUFDVFksUUFKV1osRUFBQSxXQUtYYSxPQUFRLEVBQ1JDLE9BTlcsRUFPWEMsS0FBTSxFQUNOQyxLQUFBQSxFQUNBQyxNQUFBQSxHQUNJQSxXQUFLSCxXQUNMUixLQUFLUyxNQUFTVCxLQUFLTyxPQUFTUCxLQUFLUyxLQUFuQixHQUNkVCxLQUFLSyxNQUFRTyxLQUFLQyxPQUFNYixLQUFLUSxLQUFNTSxHQVo1QmQsS0FBQUssUUFBQU8sSUFBQSxDQUFBQyxLQUFBYixLQUFBUSxLQUFBTSxJQUFBZCxLQUFBUyxRQWdCUE0sY0FDSUMsU0FBQUEsR0FESixJQUtRQyxFQUhKQyxFQUFNRCxLQUFBQSxJQUNORSxFQUhKQyxPQUFBQyxzQkFJSUMsRUFBQUEsSUFFSUgsRUFBTUgsS0FOZEMsSUFBQUMsRUFBQUssSUFBQUwsR0FBQUssRUFBQUMsRUFBQWIsY0FRQUssR0FBQUEsRUFBQU0sSUFDd0MsT0FBUkgsRUFBQUcsR0FBaEN0QixLQUFBVSxNQUFBLFdBQUFTLEVBQUEsSUFFSk0sWUFBYSxXQUNKekIsS0FBS0ksV0FDTkosS0FBS0csS0FBS0QsT0FDVkYsS0FBS0ssUUFBUXFCLFNBQVMsV0FLMUJOLEtBQUFBLFVBQU9PLEVBQ0hQLE9BQUFPLFdBQUEsS0FDQTNCLEtBQUtLLFVBQVF1QixFQUNmNUIsS0FIRkssUUFBQXVCLFlBQUEsV0FJSCxRQTZCRCxTQUFLQyxJQUNEVCxLQUFBQSxNQUFPVSxJQUdWOUIsS0FKRCtCLE1BQUEsRUFLQS9CLEtBQUtnQyxZQUFZLEdBQ2ZoQyxLQUFBNkIsYUFBSUksV0FETmIsT0FBQVUsWUFBQSxTQVFJOUIsS0FBQWdDLFVBQUlFLFdBUGNDLEtBQUtDLFVBRTNCcEMsS0FBS3FDLFFBQVUsYUFXUEMsS0FBQUEsYUFBVUMsV0FDVixNQUFBRCxFQUFXNUMsRUFBWCxjQUNJNEMsSUFBQUEsRUFBQUEsRUFFSUEsRUFBQUEsU0FBQUEsa0JBRUFsQixJQUFBQSxFQUFBQSxPQUFBQSxZQUFPb0IsS0FDVk4sSUFDSkksRUFBQUMsS0FBQUwsR0FWTEEsRUFBQSxJQU5KSSxFQUFBQyxLQUFBLFNBbUJITCxHQUFBLElBUG1CSSxFQUFVQyxLQUFLLEtBV3BCRCxFQUFhVixZQUFBLGtCQUNWYSxPQUFkRCxjQUFBRSxNQVBNLE1BckRWbEIsRUFBQVQsY0FBQSxHQUlJUyxFQUFBQSxHQUFBQSxZQUFnQm1CLFNBQVU5QyxHQUMxQjJCLEVBQU9qQixPQUFTb0MsRUFBRUMsTUFBUS9DLEVBQUtnRCxTQUFTL0IsS0FGNUNVLEVBQUFqQixPQUFBb0MsRUFBQUMsTUFBQS9DLEVBQUFnRCxTQUFBL0IsTUFLSVUsRUFBQUEsR0FBQUEsYUFBQSxXQURKQSxFQUFBbkIsUUFBQU8sSUFBQSxVQUFBLFdBS0lZLEVBQUFBLEdBQUFBLGFBQWVzQixXQURuQnRCLEVBQUFuQixRQUFBeUMsV0FBQSxXQUlJdEIsRUFBQUEsR0FBQUEsUUFBT0MsS0FEWEQsRUFBQUMsZ0JBdURLL0IsRUFBQSxVQUZtQnFELEdBQUEsUUFBQSxNQUR4QmpELEVBQUEsSUFBQTJDLEdBeEhKTyxlQW9IUXRELEVBQUUsVUFBVWdDLFNBQVMsV0FJekJoQyxFQUFFLFVBQVVxRCxHQUFHLFFBQVEsU0FBcUJKLEdBQ3BDbkIsRUFBT3BCLFVBQVNWLEVBQUVNLE1BQU1pRCxRQUFRLElBQUksS0FDcENqRCxLQUFLa0QiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJCggKCkgPT4ge1xuICAgIGNvbnN0IHNvdW5kdHJhY2sgPSBuZXcgQXVkaW8oJy4uL211c2ljL1F1aXJreS1BY3Rpb24yLm1wMycpO1xuICAgIGNvbnN0IGdhbWUgPSAkKCcjZ2FtZScpO1xuICAgIGxldCBuZXdHYW1lO1xuXG4gICAgc291bmR0cmFjay5hZGRFdmVudExpc3RlbmVyKCdlbmRlZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmN1cnJlbnRUaW1lID0gMDtcbiAgICAgICAgdGhpcy5wbGF5KCk7XG4gICAgfSwgZmFsc2UpO1xuXG5cbiAgICBjb25zdCBjdXJzb3IgPSB7XG4gICAgICAgIHNob3Q6IG5ldyBBdWRpbygnLi4vbXVzaWMvc2hvdC5tcDMnKSxcbiAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICBzdWJqZWN0OiAkKCcjY3Vyc29yJyksXG4gICAgICAgIG1vdXNlWDogMCxcbiAgICAgICAgbW91c2VZOiAwLFxuICAgICAgICB4UG9zOiAwLFxuICAgICAgICB5UG9zOiAwLFxuICAgICAgICBjbGVhcjogJycsXG4gICAgICAgIGRyYXdDdXJzb3I6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB0aGlzLnhQb3MgKz0gKHRoaXMubW91c2VYIC0gdGhpcy54UG9zLTI1KTtcbiAgICAgICAgICAgIHRoaXMueVBvcyArPSAodGhpcy5tb3VzZVkgLSB0aGlzLnlQb3MtMjUpO1xuICAgICAgICAgICAgdGhpcy5zdWJqZWN0LmNzcyh7bGVmdDogdGhpcy54UG9zLCB0b3A6dGhpcy55UG9zfSk7XG5cbiAgICAgICAgfSxcbiAgICAgICAgYW5pbWF0ZUN1cnNvcjogZnVuY3Rpb24oZGVsYXkpIHtcbiAgICAgICAgICAgIGxldCBkYXRlTm93ID0gRGF0ZS5ub3csXG4gICAgICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbj13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLFxuICAgICAgICAgICAgICAgIHN0YXJ0PWRhdGVOb3coKSxcbiAgICAgICAgICAgICAgICBzdG9wLFxuICAgICAgICAgICAgICAgIGludGVydmFsRnVuYz0gKCk9PiB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGVOb3coKS1zdGFydDxkZWxheXx8KHN0YXJ0Kz1kZWxheSwgIGN1cnNvci5kcmF3Q3Vyc29yKCkpO1xuICAgICAgICAgICAgICAgICAgICBzdG9wfHxyZXF1ZXN0QW5pbWF0aW9uKGludGVydmFsRnVuYylcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbihpbnRlcnZhbEZ1bmMpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2xlYXIgPSBmdW5jdGlvbigpeyBzdG9wPTEgfTtcbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlQ2xpY2s6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQpe1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvdC5wbGF5KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zdWJqZWN0LmFkZENsYXNzKFwicmVsb2FkXCIpO1xuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIHRoaXMuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoKCk9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuc3ViamVjdC5yZW1vdmVDbGFzcyhcInJlbG9hZFwiKVxuICAgICAgICAgICAgfSwxNTAwKVxuICAgICAgICB9XG5cbiAgICB9O1xuICAgIGN1cnNvci5hbmltYXRlQ3Vyc29yKDEpO1xuICAgIC8vY3Vyc29yLmNsZWFyKCk7ICB6ZWJ5IHphdHJ6eW1hYyBhbmltYWNqZVxuXG5cbiAgICBnYW1lLm9uKCdtb3VzZW1vdmUnLCBmdW5jdGlvbihlKXtcbiAgICAgICAgY3Vyc29yLm1vdXNlWCA9IGUucGFnZVggLSBnYW1lLm9mZnNldCgpLmxlZnQ7XG4gICAgICAgIGN1cnNvci5tb3VzZVkgPSBlLnBhZ2VZIC0gZ2FtZS5vZmZzZXQoKS50b3A7XG4gICAgfSk7XG4gICAgZ2FtZS5vbignbW91c2VlbnRlcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY3Vyc29yLnN1YmplY3QuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7XG4gICAgfSk7XG5cbiAgICBnYW1lLm9uKCdtb3VzZWxlYXZlJyxmdW5jdGlvbiAoKSB7XG4gICAgICAgIGN1cnNvci5zdWJqZWN0LnJlbW92ZUF0dHIoJ3N0eWxlJylcbiAgICB9KTtcbiAgICBnYW1lLm9uKCdjbGljaycsICgpPT57XG4gICAgICAgIGN1cnNvci5oYW5kbGVDbGljaygpO1xuXG4gICAgfSk7XG5cblxuXG4gICAgZnVuY3Rpb24gR2FtZSgpIHtcbiAgICAgICAgdGhpcy5ib3hlcyA9ICQoKVxuICAgICAgICB0aGlzLmxldmVsID0gMTtcbiAgICAgICAgdGhpcy5lbmVtaWVzRGF0YSA9IFtdO1xuICAgICAgICB0aGlzLnN0YXJ0TmV3R2FtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHdpbmRvdy5zZXRJbnRlcnZhbCgoKT0+e1xuXG4gICAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmRyYXdFbmVteSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBsZXQgZW5lbXlMb2NhdGlvbiA9IE1hdGgucmFuZG9tKClcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5sZXZlbFVwID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYW5pbWF0ZVN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc3QgY291bnREb3duID0gJCgnI2NvdW50RG93bicpO1xuICAgICAgICAgICAgbGV0IGNvdW50ZXIgPSAzO1xuXG4gICAgICAgICAgICBjb3VudERvd24uYWRkQ2xhc3MoXCJjb3VudEFuaW1hdGlvblwiKTtcblxuICAgICAgICAgICAgbGV0IGlkID0gd2luZG93LnNldEludGVydmFsKCgpPT57XG4gICAgICAgICAgICAgICAgY291bnRlci0tO1xuICAgICAgICAgICAgICAgIGNvdW50RG93bi50ZXh0KGNvdW50ZXIpO1xuICAgICAgICAgICAgICAgIGlmKGNvdW50ZXI8MCl7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50RG93bi50ZXh0KFwiU3RhcnRcIik7XG4gICAgICAgICAgICAgICAgICAgIGlmKGNvdW50ZXI8LTEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgY291bnREb3duLnRleHQoXCIzXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY291bnREb3duLnJlbW92ZUNsYXNzKFwiY291bnRBbmltYXRpb25cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbChpZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LDUwMClcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbiAgICAkKCcjc3RhcnQnKS5vbihcImNsaWNrXCIsICgpPT57XG4gICAgICAgIG5ld0dhbWUgPSBuZXcgR2FtZSgpO1xuICAgICAgICBuZXdHYW1lLmFuaW1hdGVTdGFydCgpO1xuICAgICAgICAkKCcuYWxpZW4nKS5hZGRDbGFzcyhcInN0YXJ0XCIpO1xuXG4gICAgICAgIC8vc291bmR0cmFjay5wbGF5KClcbiAgICB9KTtcbiAgICAkKCcuYWxpZW4nKS5vbignY2xpY2snLGZ1bmN0aW9uIGRldGVjdEFsaWVuKGUpIHtcbiAgICAgICAgaWYoIWN1cnNvci5kaXNhYmxlZCkkKHRoaXMpLmZhZGVPdXQoNDAwLCgpPT57XG4gICAgICAgICAgICB0aGlzLnJlbW92ZSgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxufSk7Il19
